// Copyright 2019 Justin Selsor
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the 
// "Software"), to deal in the Software without restriction, including 
// without limitation the rights to use, copy, modify, merge, publish, 
// distribute, sublicense, and/or sell copies of the Software, and to 
// permit persons to whom the Software is furnished to do so, subject 
// to the following conditions:
//
// The above copyright notice and this permission notice shall be 
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
// OTHER DEALINGS IN THE SOFTWARE.
//
// Author: Justin Selsor
// Date Created: 02/17/19
// Purpose: This stores the data of a match based on that generated by the 
// client generator.

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace MatchSystem
{
    public class Client
    {
        public string name;
        public Generator.ClientGenerator.Ages age;
        public Generator.ClientGenerator.Races race;
        public Generator.ClientGenerator.Genders gender;
        public Attribute[] likes;
        public Attribute[] dislikes;

        #region Characer_Image
        public UnityEngine.UI.Image head;
        public UnityEngine.UI.Image hair;
        public UnityEngine.UI.Image eyebrows;
        public UnityEngine.UI.Image eyes;
        public UnityEngine.UI.Image mouth;
        #endregion

        public Client (string _name, Generator.ClientGenerator.Ages _age, Generator.ClientGenerator.Races _race, Generator.ClientGenerator.Genders _gender, Attribute[] _likes, Attribute[] _dislikes)
        {
            name = _name;
            age = _age;
            race = _race;
            gender = _gender;
            likes = _likes;
            dislikes = _dislikes;
        }

        public void InitalizeCharacterImage (UnityEngine.UI.Image _head, UnityEngine.UI.Image _hair, UnityEngine.UI.Image _eyebrows, UnityEngine.UI.Image _eyes, UnityEngine.UI.Image _mouth)
        {
            head = _head;
            hair = _hair;
            eyebrows = _eyebrows;
            eyes = _eyes;
            mouth = _mouth;
        }

        public int ScoreMatch(Match _match)
        {
            int val = 1;

            foreach (Attribute like in likes)
            {
                Debug.Log(like.attributeText);
                if(Utilities.Utility.BelongsTo(like, _match.likes))
                {
                    val += 2;
                }

                

                foreach (Attribute matchlike in _match.likes)
                {
                    if (like.CompatableAttribute(matchlike.complements))
                    {
                        val += 1;
                    }
                }

                foreach (Attribute matchlike in _match.dislikes)
                {
                    if (like.CompatableAttribute(matchlike.blocks))
                    {
                        val -= 1;
                    }
                }
            }

            return val;
        }

        public string GetLikesText ()
        {
            string value = "";

            foreach (Attribute at in likes)
            {
                value += at.attributeText + "\n";
            }

            return value;
        }

        public string GetDislikesText ()
        {
            string value = "";

            foreach (Attribute at in dislikes)
            {
                value += at.attributeText + "\n";
            }

            return value;
        }
    }
}